type: edu
files:
- name: src/bullscows/Main.java
  visible: true
  text: |
    package bullscows;

    public class Main {
        public static void main(String[] args) {
            System.out.println("Hello World!");
        }
    }
  learner_created: false
- name: test/BullsCowsTest.java
  visible: false
  text: |-
    import bullscows.Main;
    import org.hyperskill.hstest.dynamic.input.DynamicTestingMethod;
    import org.hyperskill.hstest.stage.StageTest;
    import org.hyperskill.hstest.testcase.CheckResult;
    import org.hyperskill.hstest.testing.TestedProgram;

    import java.util.ArrayList;
    import java.util.Arrays;
    import java.util.LinkedHashSet;
    import java.util.List;
    import java.util.stream.Collectors;

    import static org.hyperskill.hstest.testing.expect.Expectation.expect;

    public class BullsCowsTest extends StageTest<String> {

        // basic test case
        @DynamicTestingMethod
        CheckResult test1() {
            TestedProgram main = new TestedProgram(Main.class);
            main.start();
            String output = main.execute("4").toLowerCase().trim();

            return outputCheck(output, 4);
        }

        @DynamicTestingMethod
        CheckResult test2() {
            TestedProgram main = new TestedProgram(Main.class);
            main.start();
            String output = main.execute("1").toLowerCase().trim();

            return outputCheck(output, 1);
        }

        // test of incorrect input
        @DynamicTestingMethod
        CheckResult test4() {
            TestedProgram main = new TestedProgram(Main.class);
            main.start();
            String output = main.execute("11").toLowerCase().trim();

            return outputCheck(output, 11);
        }

        @DynamicTestingMethod
        CheckResult test5() {
            TestedProgram main = new TestedProgram(Main.class);
            main.start();
            String output = main.execute("6").toLowerCase().trim();

            return outputCheck(output, 6);
        }

        @DynamicTestingMethod
        CheckResult test6() {
            TestedProgram main = new TestedProgram(Main.class);
            main.start();
            String output = main.execute("3").toLowerCase().trim();

            return outputCheck(output, 3);
        }


        CheckResult outputCheck(String source, int length) {

            if (length > 10) {
                if (source.toLowerCase().contains("error")) {
                    return CheckResult.correct();
                } else {
                    return CheckResult.wrong("An error message expected with input " +
                            "\"" + length + "\"");
                }
            }

            List<Integer> integers = expect(source).toContain(1).integers();
            source = "" + integers.get(0);

            if (source.length() != length) {
                return CheckResult.wrong("The output number of your program has " +
                        "an incorrect length (found " + source.length() + ")");
            }

            List<Integer> temp = stringToArrayOfNumbers(source);
            temp = new ArrayList<>(new LinkedHashSet<>(temp));

            if (temp.toArray().length != source.length()) {
                return CheckResult.wrong("Digits in the generated number are not unique.");
            }

            return CheckResult.correct();
        }

        private static List<Integer> stringToArrayOfNumbers(String array) {
            return Arrays.stream(array.split(""))
                    .map(Integer::parseInt)
                    .collect(Collectors.toList());
        }
    }
  learner_created: false
- name: src/bullscows/BullsAndCowsGame.java
  visible: true
  text: |
    package bullscows;

    import java.util.Random;

    public class BullsAndCowsGame {
        private String code;
    //    private int turns = 0;

        static BullsAndCowsGame init() {
            return new BullsAndCowsGame();
        }

        private BullsAndCowsGame() {
            code = "9305";
    //        code = prepareCode();
    //        System.out.println("The secret code is prepared: ****." + code);
        }

        private String prepareCode() {
            Random random = new Random();
            int number;
            do {
                number = random.nextInt() % 10000;
            } while (number < 999);
            String code = String.valueOf(number);
            return code;
        }

        public boolean successGuess(String guessNumber) {
    //        System.out.println("Turn " + turns++ + 1 + " Answer:");
    //        System.out.println(guessNumber);
            System.out.println("Grade: " + getGrade(guessNumber) + ". The secret code is " + code + ".");
            if (guessNumber.equals(code)) {
                System.out.println("Congrats! The secret code is " + code + ".");
                return true;
            }
            return true;
        }

        private String getGrade(String guessNumber) {
            int bulls = 0;
            int cows = 0;
            for (int i = 0; i < code.length(); i++) {
                if (code.charAt(i) == guessNumber.charAt(i)) {
                    bulls++;
                } else if (code.contains(guessNumber.substring(i, i + 1))) {
                    cows++;
                }
            }
            if (bulls == 0 && cows == 0) {
                return "None";
            }
            String result = "";
            if (bulls > 0) {
                result = bulls + " bull(s)";
            }
            if (cows > 0) {
                if (bulls > 0) {
                    result += " and ";
                }
                result += cows + " cow(s)";
            }
    //        if (bulls > 1) {
    //            result = bulls + " bulls";
    //        } else if (bulls == 1) {
    //            result = bulls + " bull";
    //        }
    //        if (cows > 0) {
    //            if (bulls > 0) {
    //                result += " and ";
    //            }
    //            if (cows > 1) {
    //                result += cows + " cows";
    //            } else if (cows == 1) {
    //                result += cows + " cow";
    //            }
    //        }
            return result;
        }
    }
  learner_created: true
feedback_link: https://hyperskill.org/projects/53/stages/289/implement
status: Solved
feedback:
  message: Congratulations! Continue on <a href="https://hyperskill.org/projects/53/stages/289/implement">JetBrains
    Academy</a>
  time: Sun, 18 Oct 2020 16:02:48 UTC
record: 3
